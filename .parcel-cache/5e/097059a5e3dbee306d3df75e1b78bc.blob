"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _View = _interopRequireDefault(require("./View.js"));

var _icons = _interopRequireDefault(require("url:../../img/icons.svg"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class paginationView extends _View.default {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "_parentElement", this.document.querySelector('.pagination'));
  }

  _generateMarkup() {
    const currentPage = this._data.results.page;
    const numPages = Math.ceil(this._data.results.length / this._data.resultsPerPage); //page1, no other pages

    if (currentPage === 1 && numPages === 1) {
      return 'Only one page';
    } //page1, there are other pages
    else if (currentPage === 1 && numPages !== 1) {
        return `
        <button class="btn--inline pagination__btn--next">
          <span>"Page ${currentPage + 1}"</span>
          <svg class="search__icon">
            <use href="${_icons.default}#icon-arrow-right"></use>
          </svg>
        </button>
      `;
      } //other page, no other pages
      else if (currentPage !== 1 && numPages !== 1) {
          return `
        <button class="btn--inline pagination__btn--prev">
          <svg class="search__icon">
            <use href="${_icons.default}#icon-arrow-left"></use>
          </svg>
          <span>"Page ${currentPage - 1}"</span>
        </button>
      `;
        } //other page, there are other pages
        else {
            return `
        <button class="btn--inline pagination__btn--prev">
          <svg class="search__icon">
            <use href="${_icons.default}#icon-arrow-left"></use>
          </svg>
          <span>"Page ${currentPage - 1}"</span>
        </button>
        <button class="btn--inline pagination__btn--next">
          <span>"Page ${currentPage + 1}"</span>
          <svg class="search__icon">
            <use href="${_icons.default}#icon-arrow-right"></use>
          </svg>
        </button>
      `;
          }
  }

  addHandlerRender(handler) {}

}

var _default = new paginationView();

exports.default = _default;